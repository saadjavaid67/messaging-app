{"version":3,"sources":["component/Home.js","component/login.js","App.js","reportWebVitals.js","index.js"],"names":["url","Home","user","useState","messages","setMessages","count","setCount","sendMessage","e","_text","a","preventDefault","message","value","console","log","fetch","method","headers","body","JSON","stringify","person","text","visible","sentby","name","then","response","json","useEffect","data","document","getElementById","objDiv","scrollTop","scrollHeight","fetchMessages","className","signOut","id","map","key","time","split","onSubmit","autoComplete","type","placeholder","onClick","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","Login","firestore","useAuthState","_user","displayName","error","provider","GoogleAuthProvider","signInWithPopup","currentUser","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4100389a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport '../App.css'\r\nimport mymodule from './login'\r\n\r\nlet url = \"https://saadjavaid67-messaging-app.herokuapp.com/\";\r\nconst Home = (user) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [count, setCount] = useState(0);\r\n\r\n    const sendMessage = async (e, _text) => {\r\n        e.preventDefault();\r\n        let message = _text.value;\r\n        _text.value = '';\r\n        setCount(count + 1);\r\n        console.log(count);\r\n        await fetch(url + '/message', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                person: \"saad\",\r\n                text: message,\r\n                visible: \"true\",\r\n                sentby: user.user,\r\n                name: null\r\n            })\r\n        })\r\n            .then(response => response.json());\r\n    }\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            // console.log(user.user)\r\n            // console.log('fetch call');\r\n            await fetch(url + '/messages', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ person: \"saad\" })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => setMessages(data));\r\n            if (document.getElementById(\"_chat\")) {\r\n                var objDiv = document.getElementById(\"_chat\");\r\n                objDiv.scrollTop = objDiv.scrollHeight;\r\n            }\r\n            // console.log(messages)\r\n        }\r\n        fetchMessages();\r\n    }, [messages, count]);\r\n    console.log(messages)\r\n    return (<div>\r\n        <div className=\"chat-box\">\r\n        <mymodule.signOut />\r\n            <div id=\"_chat\" className=\"chat\">\r\n                {messages.map((message, key) => (\r\n                    <div className={(message.sentby === user.user) ? (\"sender-message-wrapper\") : (\"reciever-message-wrapper\")} key={key}>\r\n                        <div className={(message.sentby === user.user) ? (\"sender message-container\") : (\"reciever message-container\")}>\r\n                            <div className=\"name\">{message.sentby}</div>\r\n                            <div className=\"message\">{message.text}</div>\r\n                            <div className=\"time\">{message.time.split('.')[0]}</div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"sendmessage\">\r\n                <form onSubmit={() => false}>\r\n                    <input className=\"message-input\" autoComplete=\"off\" type=\"text\" id=\"text-input\" placeholder=\"Enter a Message\" />\r\n                    <input className=\"send-message\" id=\"sendButton\" type=\"submit\" onClick={(e) => sendMessage(e, document.getElementById('text-input'))} value=\"Send\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport Home from \"./Home\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCyB2Or8Dxmwd8m_iptGEFcqN579BN1dzk\",\r\n    authDomain: \"message-app-b2d31.firebaseapp.com\",\r\n    projectId: \"message-app-b2d31\",\r\n    storageBucket: \"message-app-b2d31.appspot.com\",\r\n    messagingSenderId: \"939057848458\",\r\n    appId: \"1:939057848458:web:9efb13d3cf5d74bd9d4d73\",\r\n    measurementId: \"G-B21M3PZ13F\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nfunction Login() {\r\n\r\n\r\n    const firestore = firebase.firestore();\r\n    const [_user] = useAuthState(auth)\r\n    const signInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n    }\r\n    let name;\r\n    try {\r\n        name = (_user.displayName)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    return (\r\n\r\n        (name) ? (<Home user={name} />) : (<button id=\"login\" onClick={signInWithGoogle}>Login</button>));\r\n};\r\nconst signOut = () => {\r\n    return auth.currentUser && (<button onClick={() => auth.signOut()}>SignOut</button>)\r\n}\r\n\r\nexport default { Login, signOut };\r\n","import './App.css';\nimport Login from './component/login';\n\n\nfunction App() {\n  \n \n    return (\n<Login.Login/>\n\n);\n{/* <HashRouter>\n  <Route exact path=\"/\" component={Home}/>\n  <Route exact path=\"/login/\" component={login}/>\n</HashRouter> */}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}